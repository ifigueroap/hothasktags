$!
!!
$
&&
*
**
+
++
-
.
/
/=
<
<=
=<<
==
>
>=
>>
>>=
Bool
Bounded
minBound
maxBound
Char
Double
EQ
Ordering
Either
Enum
succ
pred
toEnum
fromEnum
enumFrom
enumFromThen
enumFromTo
enumFromThenTo
Eq
==
/=
False
FilePath
String
Float
Fractional
Floating
pi
exp
sqrt
log
**
logBase
sin
tan
cos
asin
atan
acos
sinh
tanh
cosh
asinh
atanh
acosh
Num
Fractional
/
recip
fromRational
Functor
fmap
GHC.Base.<$
GT
Ordering
IO
IOError
Int
Integer
Real
Enum
Integral
quot
rem
div
mod
quotRem
divMod
toInteger
Just
LT
Left
Maybe
Monad
>>=
>>
return
fail
Nothing
Num
+
*
-
negate
abs
signum
fromInteger
Eq
Ord
compare
<
>=
>
<=
max
min
Ordering
Rational
Read
readsPrec
readList
GHC.Read.readPrec
GHC.Read.readListPrec
type ReadS
Num
Ord
Real
toRational
RealFrac
Floating
RealFloat
floatRadix
floatDigits
floatRange
decodeFloat
encodeFloat
exponent
significand
scaleFloat
isNaN
isInfinite
isDenormalized
isNegativeZero
isIEEE
atan2
Real
Fractional
RealFrac
properFraction
truncate
round
ceiling
floor
Right
Show
showsPrec
show
showList
ShowS
String
True
^
^^
abs
acos
acosh
all
and
any
appendFile
asTypeOf
asin
asinh
atan
atan2
atanh
break
ceiling
compare
concat
concatMap
const
cos
cosh
curry
cycle
decodeFloat
div
divMod
drop
dropWhile
either
elem
encodeFloat
enumFrom
enumFromThen
enumFromThenTo
enumFromTo
error
even
exp
exponent
fail
filter
flip
floatDigits
floatRadix
floatRange
floor
fmap
foldl
foldl1
foldr
foldr1
fromEnum
fromInteger
fromIntegral
fromRational
fst
gcd
getChar
getContents
getLine
head
id
init
interact
ioError
isDenormalized
isIEEE
isInfinite
isNaN
isNegativeZero
iterate
last
lcm
length
lex
lines
log
logBase
lookup
map
mapM
mapM_
max
maxBound
maximum
maybe
min
minBound
minimum
mod
negate
not
notElem
null
odd
or
otherwise
pi
pred
print
product
properFraction
putChar
putStr
putStrLn
quot
quotRem
read
readFile
readIO
readList
readLn
readParen
reads
readsPrec
realToFrac
recip
rem
repeat
replicate
return
reverse
round
scaleFloat
scanl
scanl1
scanr
scanr1
seq
sequence
sequence_
show
showChar
showList
showParen
showString
shows
showsPrec
significand
signum
sin
sinh
snd
span
splitAt
sqrt
subtract
succ
sum
tail
take
takeWhile
tan
tanh
toEnum
toInteger
toRational
truncate
uncurry
undefined
unlines
until
unwords
unzip
unzip3
userError
words
writeFile
zip
zip3
zipWith
zipWith3
||
